version: '3.8'

networks:
  my-network:
    driver: bridge

services:
  users-rest:
    image: users-rest:latest
    ports:
      - "10001:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      JDBC_URL: jdbc:postgresql://db:5432/users_db
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 123
    networks:
      - my-network

  roles-rest:
    image: roles-rest:latest
    ports:
      - "10002:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      JDBC_URL: jdbc:postgresql://db:5432/roles_db
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 123
    networks:
      - my-network

  users-roles-rest:
    image: users-roles-rest:latest
    ports:
      - "10003:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      JDBC_URL: jdbc:postgresql://db:5432/users_roles_db
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 123
    networks:
      - my-network

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_init:/docker-entrypoint-initdb.d
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - my-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: